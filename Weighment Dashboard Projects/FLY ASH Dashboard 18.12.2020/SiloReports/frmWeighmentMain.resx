<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Location.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>